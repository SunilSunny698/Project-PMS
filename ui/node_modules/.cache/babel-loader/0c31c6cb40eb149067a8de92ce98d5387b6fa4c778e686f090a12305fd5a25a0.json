{"ast":null,"code":"var _jsxFileName = \"/Users/Gembali/Documents/GitHub Space/Project-PMS/ui/src/components/tables/EarningsTable.tsx\",\n  _s = $RefreshSig$();\nimport { Table } from \"./Table\";\nimport api from '../api/axiosConfig';\nimport { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EarningsTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const headers = {\n    Authorization: `Bearer ${localStorage.getItem(\"Jwt\")}`\n  };\n  const fetchData = async () => {\n    await api.get(\"earning\", {\n      headers\n    }).then(response => {\n      const Data = response.data;\n      setData(Data);\n    }).catch(() => {});\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const cols = useMemo(() => [{\n    header: 'Id',\n    cell: row => row.renderValue(),\n    accessorKey: 'earning.employeeId'\n  }, {\n    header: 'Name',\n    cell: row => row.renderValue(),\n    accessorKey: 'name'\n  }, {\n    header: 'Allowances',\n    cell: row => row.renderValue(),\n    accessorKey: 'earning.anyAllowances'\n  }, {\n    header: 'Bonus',\n    cell: row => row.renderValue(),\n    accessorKey: 'earning.bonus'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: cols,\n    data: data,\n    label: \"Earning\",\n    view: false,\n    del: false,\n    fetchHandler: fetchData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(EarningsTable, \"zTXzAGCRhETZpIfh+mhTpgRnV4s=\");\n_c = EarningsTable;\nvar _c;\n$RefreshReg$(_c, \"EarningsTable\");","map":{"version":3,"names":["Table","api","useEffect","useMemo","useState","jsxDEV","_jsxDEV","EarningsTable","_s","data","setData","headers","Authorization","localStorage","getItem","fetchData","get","then","response","Data","catch","cols","header","cell","row","renderValue","accessorKey","columns","label","view","del","fetchHandler","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Gembali/Documents/GitHub Space/Project-PMS/ui/src/components/tables/EarningsTable.tsx"],"sourcesContent":["import { ColumnDef } from \"@tanstack/react-table\";\nimport { Table } from \"./Table\";\nimport api from '../api/axiosConfig'\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { Earning } from \"../types/pmsTypes\";\n\nexport const EarningsTable = () => {\n    const [data,setData] = useState<Earning[]>([])\n    const headers = {          \n      Authorization:`Bearer ${localStorage.getItem(\"Jwt\")}`\n    }\n    const fetchData = async () => {\n      await api.get(\"earning\",{headers})\n      .then(response => {\n        const Data:Earning[] = response.data\n        setData(Data)\n        \n      })\n      .catch(() =>{})\n    }\n    useEffect(()=>{\n      fetchData()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    const cols = useMemo<ColumnDef<Earning>[]>(\n        () => [\n          {\n            header:'Id',\n            cell: (row) => row.renderValue(),\n            accessorKey:'earning.employeeId'\n          },\n          {\n            header: 'Name',\n            cell: (row) => row.renderValue(),\n            accessorKey: 'name',\n          },\n          {\n            header: 'Allowances',\n            cell: (row) => row.renderValue(),\n            accessorKey: 'earning.anyAllowances',\n          },\n          {\n            header: 'Bonus',\n            cell: (row) => row.renderValue(),\n            accessorKey: 'earning.bonus',\n          }\n          \n        ],\n        []\n       );\n    \n    return (\n        <Table columns={cols} data={data} label=\"Earning\" view={false} del={false} fetchHandler={fetchData}/>\n    )\n    \n       \n}"],"mappings":";;AACA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAY,EAAE,CAAC;EAC9C,MAAMO,OAAO,GAAG;IACdC,aAAa,EAAE,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;EACtD,CAAC;EACD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMd,GAAG,CAACe,GAAG,CAAC,SAAS,EAAC;MAACL;IAAO,CAAC,CAAC,CACjCM,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAc,GAAGD,QAAQ,CAACT,IAAI;MACpCC,OAAO,CAACS,IAAI,CAAC;IAEf,CAAC,CAAC,CACDC,KAAK,CAAC,MAAK,CAAC,CAAC,CAAC;EACjB,CAAC;EACDlB,SAAS,CAAC,MAAI;IACZa,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAC,EAAE,CAAC;EACL,MAAMM,IAAI,GAAGlB,OAAO,CAChB,MAAM,CACJ;IACEmB,MAAM,EAAC,IAAI;IACXC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC;IAChCC,WAAW,EAAC;EACd,CAAC,EACD;IACEJ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC;IAChCC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC;IAChCC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,MAAM,EAAE,OAAO;IACfC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC;IAChCC,WAAW,EAAE;EACf,CAAC,CAEF,EACD,EACD,CAAC;EAEJ,oBACIpB,OAAA,CAACN,KAAK;IAAC2B,OAAO,EAAEN,IAAK;IAACZ,IAAI,EAAEA,IAAK;IAACmB,KAAK,EAAC,SAAS;IAACC,IAAI,EAAE,KAAM;IAACC,GAAG,EAAE,KAAM;IAACC,YAAY,EAAEhB;EAAU;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAI7G,CAAC;AAAA3B,EAAA,CAlDYD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}