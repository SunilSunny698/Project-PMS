{"ast":null,"code":"var _jsxFileName = \"/Users/Gembali/Documents/GitHub Space/Project-PMS/ui/src/components/tables/EarningsTable.tsx\",\n  _s = $RefreshSig$();\nimport { Table } from \"./Table\";\nimport api from '../api/axiosConfig';\nimport { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EarningsTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [maxPages, setMaxPages] = useState(0);\n  const headers = {\n    Authorization: `Bearer ${localStorage.getItem(\"X-AUTH\")}`\n  };\n  const fetchData = async (pageNumber = 0, pageSize = 1) => {\n    await api.get(`earning?pageNumber=${pageNumber}&pageSize=${pageSize}`, {\n      headers\n    }).then(response => {\n      const Data = response.data.content;\n      setMaxPages(response.data.totalPages - 1);\n      setData(Data);\n    }).catch(() => {});\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const cols = useMemo(() => [{\n    header: 'Id',\n    cell: row => row.renderValue(),\n    accessorKey: 'id'\n  }, {\n    header: 'Name',\n    cell: row => row.renderValue(),\n    accessorKey: 'name'\n  }, {\n    header: 'Allowances',\n    cell: row => row.renderValue() || 'N/A',\n    accessorKey: 'earning.anyAllowances'\n  }, {\n    header: 'Bonus',\n    cell: row => row.renderValue() || 'N/A',\n    accessorKey: 'earning.bonus'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: cols,\n    data: data,\n    label: \"Earning\",\n    view: false,\n    del: false,\n    fetchHandler: fetchData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(EarningsTable, \"4wSZUYELBh/m8GsG7oG++Zvv0aQ=\");\n_c = EarningsTable;\nvar _c;\n$RefreshReg$(_c, \"EarningsTable\");","map":{"version":3,"names":["Table","api","useEffect","useMemo","useState","jsxDEV","_jsxDEV","EarningsTable","_s","data","setData","maxPages","setMaxPages","headers","Authorization","localStorage","getItem","fetchData","pageNumber","pageSize","get","then","response","Data","content","totalPages","catch","cols","header","cell","row","renderValue","accessorKey","columns","label","view","del","fetchHandler","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Gembali/Documents/GitHub Space/Project-PMS/ui/src/components/tables/EarningsTable.tsx"],"sourcesContent":["import { ColumnDef } from \"@tanstack/react-table\";\nimport { Table } from \"./Table\";\nimport api from '../api/axiosConfig'\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { Earning } from \"../types/pmsTypes\";\n\nexport const EarningsTable = () => {\n    const [data,setData] = useState<Earning[]>([])\n    const [maxPages, setMaxPages] = useState(0)\n    const headers = {          \n      Authorization:`Bearer ${localStorage.getItem(\"X-AUTH\")}`\n    }\n    const fetchData = async (pageNumber = 0,pageSize = 1) => {\n      await api.get(`earning?pageNumber=${pageNumber}&pageSize=${pageSize}`,{headers})\n      .then(response => {\n        const Data:Earning[] = response.data.content\n        setMaxPages(response.data.totalPages-1)\n        setData(Data)\n        \n      })\n      .catch(() =>{})\n    }\n    useEffect(()=>{\n      fetchData()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    const cols = useMemo<ColumnDef<Earning>[]>(\n        () => [\n          {\n            header:'Id',\n            cell: (row) => row.renderValue(),\n            accessorKey:'id'\n          },\n          {\n            header: 'Name',\n            cell: (row) => row.renderValue(),\n            accessorKey: 'name',\n          },\n          {\n            header: 'Allowances',\n            cell: (row) => row.renderValue() || 'N/A',\n            accessorKey: 'earning.anyAllowances',\n          },\n          {\n            header: 'Bonus',\n            cell: (row) => row.renderValue() || 'N/A',\n            accessorKey: 'earning.bonus',\n          }\n          \n        ],\n        []\n       );\n    \n    return (\n        <Table columns={cols} data={data} label=\"Earning\" view={false} del={false} fetchHandler={fetchData}/>\n    )\n    \n       \n}"],"mappings":";;AACA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAY,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMS,OAAO,GAAG;IACdC,aAAa,EAAE,UAASC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE;EACzD,CAAC;EACD,MAAMC,SAAS,GAAG,MAAAA,CAAOC,UAAU,GAAG,CAAC,EAACC,QAAQ,GAAG,CAAC,KAAK;IACvD,MAAMlB,GAAG,CAACmB,GAAG,CAAE,sBAAqBF,UAAW,aAAYC,QAAS,EAAC,EAAC;MAACN;IAAO,CAAC,CAAC,CAC/EQ,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAc,GAAGD,QAAQ,CAACb,IAAI,CAACe,OAAO;MAC5CZ,WAAW,CAACU,QAAQ,CAACb,IAAI,CAACgB,UAAU,GAAC,CAAC,CAAC;MACvCf,OAAO,CAACa,IAAI,CAAC;IAEf,CAAC,CAAC,CACDG,KAAK,CAAC,MAAK,CAAC,CAAC,CAAC;EACjB,CAAC;EACDxB,SAAS,CAAC,MAAI;IACZe,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAC,EAAE,CAAC;EACL,MAAMU,IAAI,GAAGxB,OAAO,CAChB,MAAM,CACJ;IACEyB,MAAM,EAAC,IAAI;IACXC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC;IAChCC,WAAW,EAAC;EACd,CAAC,EACD;IACEJ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC;IAChCC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC,IAAI,KAAK;IACzCC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,MAAM,EAAE,OAAO;IACfC,IAAI,EAAGC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC,IAAI,KAAK;IACzCC,WAAW,EAAE;EACf,CAAC,CAEF,EACD,EACD,CAAC;EAEJ,oBACI1B,OAAA,CAACN,KAAK;IAACiC,OAAO,EAAEN,IAAK;IAAClB,IAAI,EAAEA,IAAK;IAACyB,KAAK,EAAC,SAAS;IAACC,IAAI,EAAE,KAAM;IAACC,GAAG,EAAE,KAAM;IAACC,YAAY,EAAEpB;EAAU;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAI7G,CAAC;AAAAjC,EAAA,CApDYD,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}